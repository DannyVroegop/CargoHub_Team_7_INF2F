// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NewWarehouse.Migrations
{
    [DbContext(typeof(CargoContext))]
    [Migration("20241129122202_innitial_build")]
    partial class innitial_build
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contact_Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contact_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contact_Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Created_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Zip_Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Created_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Item_Reference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Item_id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Total_Allocated")
                        .HasColumnType("integer");

                    b.Property<int>("Total_Available")
                        .HasColumnType("integer");

                    b.Property<int>("Total_Expected")
                        .HasColumnType("integer");

                    b.Property<int>("Total_On_Hand")
                        .HasColumnType("integer");

                    b.Property<int>("Total_Ordered")
                        .HasColumnType("integer");

                    b.Property<string>("Updated_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Models.Item", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Commodity_Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Created_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Item_Group")
                        .HasColumnType("integer");

                    b.Property<int>("Item_Line")
                        .HasColumnType("integer");

                    b.Property<int>("Item_Type")
                        .HasColumnType("integer");

                    b.Property<string>("Model_Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Pack_Order_Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Short_Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Supplier_Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Supplier_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Supplier_Part_Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Unit_Order_Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("Unit_Purchase_Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Upc_Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Uid");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Models.ItemGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Created_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ItemGroups");
                });

            modelBuilder.Entity("Models.ItemLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Created_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ItemLines");
                });

            modelBuilder.Entity("Models.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Created_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Created_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("InventoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Warehouse_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Bill_To")
                        .HasColumnType("integer");

                    b.Property<string>("Created_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Order_Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Order_Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Picking_Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Reference_Extra")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Request_date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Ship_To")
                        .HasColumnType("integer");

                    b.Property<int>("Shipment_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Shipping_Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Source_Id")
                        .HasColumnType("integer");

                    b.Property<double>("Total_Ammount")
                        .HasColumnType("double precision");

                    b.Property<double>("Total_Discount")
                        .HasColumnType("double precision");

                    b.Property<double>("Total_Surcharge")
                        .HasColumnType("double precision");

                    b.Property<double>("Total_Tax")
                        .HasColumnType("double precision");

                    b.Property<string>("Updated_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Warehouse_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Models.OrderItem", b =>
                {
                    b.Property<int>("Order_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Item_Id")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Order_Id", "Item_Id");

                    b.HasIndex("Item_Id");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("Models.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Carrier_Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Carrier_Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Created_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Order_Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Payment_Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Request_date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Service_Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Shipment_Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Shipment_Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Shipment_Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Source_Id")
                        .HasColumnType("integer");

                    b.Property<int>("Total_Package_Count")
                        .HasColumnType("integer");

                    b.Property<double>("Total_Package_Weight")
                        .HasColumnType("double precision");

                    b.Property<string>("Transfer_Mode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("Models.ShipmentItem", b =>
                {
                    b.Property<int>("Shipment_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Item_Id")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Shipment_Id", "Item_Id");

                    b.HasIndex("Item_Id");

                    b.ToTable("ShipmentItems");
                });

            modelBuilder.Entity("Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Address_Extra")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contact_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Created_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phonenumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Zip_Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Models.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Created_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Transfer_From")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Transfer_Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Transfer_To")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("Models.TransferItem", b =>
                {
                    b.Property<int>("Transfer_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Item_Id")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Transfer_Id", "Item_Id");

                    b.HasIndex("Item_Id");

                    b.ToTable("TransferItems");
                });

            modelBuilder.Entity("Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Created_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated_at")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Zip_Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("Models.Location", b =>
                {
                    b.HasOne("Models.Inventory", null)
                        .WithMany("Locations")
                        .HasForeignKey("InventoryId");
                });

            modelBuilder.Entity("Models.OrderItem", b =>
                {
                    b.HasOne("Models.Item", "Item")
                        .WithMany("OrderItems")
                        .HasForeignKey("Item_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("Order_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Models.ShipmentItem", b =>
                {
                    b.HasOne("Models.Item", "Item")
                        .WithMany("ShipmentItems")
                        .HasForeignKey("Item_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Shipment", "Shipment")
                        .WithMany("ShipmentItems")
                        .HasForeignKey("Shipment_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Models.TransferItem", b =>
                {
                    b.HasOne("Models.Item", "Item")
                        .WithMany("TransferItems")
                        .HasForeignKey("Item_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Transfer", "Transfer")
                        .WithMany("TransferItems")
                        .HasForeignKey("Transfer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("Models.Inventory", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Models.Item", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("ShipmentItems");

                    b.Navigation("TransferItems");
                });

            modelBuilder.Entity("Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Models.Shipment", b =>
                {
                    b.Navigation("ShipmentItems");
                });

            modelBuilder.Entity("Models.Transfer", b =>
                {
                    b.Navigation("TransferItems");
                });
#pragma warning restore 612, 618
        }
    }
}
